description: Git commit message 規範與樣板（遵循 Conventional Commits）
globs:
alwaysApply: true
---

### 目的
統一 Git 提交訊息格式，提升可讀性與可維護性。本規範整合了 **Conventional Commits** 與 **Chris Beams 的七原則**。

### 主要規範（務必遵守）

本專案遵循 **Conventional Commits** 規範，其結構如下：

```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

**1. 標題行 (Header)**:
- **格式**: `類型(範圍): 主旨`，例如 `feat(api): Send an email to the customer`
- **`type` (類型)**: Commit 的性質，必須是**小寫**。常用類型見下方列表。
- **`scope` (範圍, 可選)**: 本次 commit 影響的範圍，例如 `parser`, `lang`。
- **`description` (主旨)**:
    - 簡潔描述 commit 的變更。
    - 最多 50 字元。
    - 使用祈使語氣 (imperative mood)，例如用 `Add` 而不是 `Added` 或 `Adds`。
    - 句首大寫。
    - 結尾**不**加句點。

**2. 內文 (Body, 可選)**:
- 與標題行之間**必須**有一個空白行。
- 解釋「做了什麼、為什麼要做」，而非「怎麼做」。
- 每行建議 72 字元內換行。

**3. 註腳 (Footer(s), 可選)**:
- 與內文之間**必須**有一個空白行。
- 用於標示**重大變更 (Breaking Changes)** 或追蹤 Issue 編號。
- **重大變更**: 使用 `BREAKING CHANGE: <description>`。重大變更也可以在 `type` 後加上 `!` 來表示，例如 `feat!: ...`。

**4. 語言**:
- Commit 訊息（包含 Header, Body, Footers）一律使用**英文**。

### Commit 類型 (Commit Types)

- **`feat`**: 新增功能 (A new feature)
- **`fix`**: 修復錯誤 (A bug fix)
- **`docs`**: 只修改文件 (Documentation only changes)
- **`style`**: 不影響程式碼運作的調整 (e.g. white-space, formatting, missing semi-colons)
- **`refactor`**: 重構，既不是新增功能也不是修復錯誤的程式碼調整
- **`perf`**: 提升效能的程式碼調整
- **`test`**: 新增或修改測試
- **`chore`**: 維護性任務 (e.g. updating build tasks, package manager configs)

### 建議樣板（.gitmessage）
將以下內容存成 `~/.gitmessage` 作為個人樣板。

```
# Header: <type>(<scope>): <subject>
# - type: feat, fix, docs, style, refactor, perf, test, chore, ...
# - subject: Imperative, capitalized, no period.
# Subject length: 50 chars max. ################## is here: #

# Blank line between header and body.

# Body: Explain *what* and *why* (not *how*).
# Wrap at 72 chars. ################################## is here: #

# Footer: Breaking changes, issue references, etc.
# e.g., BREAKING CHANGE: <description>
# e.g., Refs: #123
#
# Co-authored-by: name <user@users.noreply.github.com>
#
# See also:
# - Conventional Commits: https://www.conventionalcommits.org/
# - How to Write a Git Commit Message: https://cbea.ms/git-commit/
```

### Git 設定（建議）
- 啟用樣板：

```bash
git config --global commit.template ~/.gitmessage
```

- 確保註解能被自動剝除（預設即為 strip）：

```bash
git config --global commit.cleanup strip
```

### 送出前自我檢查
- **格式**: `type(scope): Subject` 是否正確？`type` 是否為小寫？
- **50/72 規則**: 主旨 ≤ 50、內文每行 ≤ 72
- **語氣**: 主旨用祈使句，句首大寫，末尾不加句點
- **內容**: 說明「做了什麼與為什麼」，必要時加上 `BREAKING CHANGE` 或 Issue 參考
- **語言**: 全段使用英文

參考資料：
- [Conventional Commits](https://www.conventionalcommits.org/)
- [How to Write a Git Commit Message](https://cbea.ms/git-commit/)